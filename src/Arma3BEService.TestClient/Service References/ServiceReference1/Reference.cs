//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arma3BEService.TestClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatMessage", Namespace="http://schemas.datacontract.org/2004/07/Arma3BEClient.Updater.Models")]
    [System.SerializableAttribute()]
    public partial class ChatMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Arma3BEService", ConfigurationName="ServiceReference1.IArma3ServiceContract", CallbackContract=typeof(Arma3BEService.TestClient.ServiceReference1.IArma3ServiceContractCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IArma3ServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/AddOrUpdateSer" +
            "ver", ReplyAction="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/AddOrUpdateSer" +
            "verResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Arma3BEService.Lib.ModelCompact.Server))]
        Arma3BEService.Lib.ModelCompact.ServerBase AddOrUpdateServer(Arma3BEService.Lib.ModelCompact.Server server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/AddOrUpdateSer" +
            "ver", ReplyAction="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/AddOrUpdateSer" +
            "verResponse")]
        System.Threading.Tasks.Task<Arma3BEService.Lib.ModelCompact.ServerBase> AddOrUpdateServerAsync(Arma3BEService.Lib.ModelCompact.Server server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/GetServers", ReplyAction="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/GetServersResp" +
            "onse")]
        Arma3BEService.Lib.ModelCompact.ServerBase[] GetServers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/GetServers", ReplyAction="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/GetServersResp" +
            "onse")]
        System.Threading.Tasks.Task<Arma3BEService.Lib.ModelCompact.ServerBase[]> GetServersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArma3ServiceContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Microsoft.ServiceModel.Arma3BEService/IArma3ServiceContract/Message")]
        void Message([System.ServiceModel.MessageParameterAttribute(Name="message")] Arma3BEService.TestClient.ServiceReference1.ChatMessage message1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArma3ServiceContractChannel : Arma3BEService.TestClient.ServiceReference1.IArma3ServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Arma3ServiceContractClient : System.ServiceModel.DuplexClientBase<Arma3BEService.TestClient.ServiceReference1.IArma3ServiceContract>, Arma3BEService.TestClient.ServiceReference1.IArma3ServiceContract {
        
        public Arma3ServiceContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public Arma3ServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public Arma3ServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Arma3ServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Arma3ServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Arma3BEService.Lib.ModelCompact.ServerBase AddOrUpdateServer(Arma3BEService.Lib.ModelCompact.Server server) {
            return base.Channel.AddOrUpdateServer(server);
        }
        
        public System.Threading.Tasks.Task<Arma3BEService.Lib.ModelCompact.ServerBase> AddOrUpdateServerAsync(Arma3BEService.Lib.ModelCompact.Server server) {
            return base.Channel.AddOrUpdateServerAsync(server);
        }
        
        public Arma3BEService.Lib.ModelCompact.ServerBase[] GetServers() {
            return base.Channel.GetServers();
        }
        
        public System.Threading.Tasks.Task<Arma3BEService.Lib.ModelCompact.ServerBase[]> GetServersAsync() {
            return base.Channel.GetServersAsync();
        }
    }
}
